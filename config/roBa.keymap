#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; }; // ダブルクリックに必要な時間を設定
/ {
    combos {
        compatible = "zmk,combos";

        SELECT_BT {
            bindings = <&bt BT_SEL 0>;
            key-positions = <22 28>;
        };

        BT_SELECT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <23 29>;
        };

        SELECT_BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <24 30>;
        };

        SELECT_BT3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <25 31>;
        };

        SELECT_BT4 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <26 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
          macro_left_click: macro_left_click {
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              bindings =
                  <&macro_press>,
                  <&mkp LCLK>,
                  <&macro_pause_for_release>,
                  <&macro_release>,
                  <&mkp LCLK>,
                  <&macro_tap>,
                  <&tog_off 4 &sl 4>;
    
              label = "MACRO_LEFT_CLICK";
          };
        macros {
            mkp_exit_AML: mkp_exit_AML {
                compatible = "zmk,behavior-macro-one-param";
                #binding-cells = <1>;
                bindings =
                    <&macro_press>,
                    <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                    <&macro_pause_for_release>,
                    <&macro_release>,
                    <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                    <&macro_tap>,
                    <&sl MOUSE>;

                label = "MKP_EXIT_AML";
            };
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F             &kp G        &to_layer_0 LS(LG(S))      &kp MINUS  &kp H        &kp J  &lt 5 K    &kp L    &kp RSHFT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &kp APOS                   &kp EQUAL  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SEMI
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 6 LANGUAGE_2  &lt 2 SPACE  &lt 1 LANGUAGE_1           &kp BSPC   &lt 2 ENTER                             &kp FSLH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp ESC   &kp F9  &kp F10            &kp F11  &kp F12                      &trans  &trans  &trans  &trans  &trans
&kp HOME  &kp F5  &kp F6             &kp F7   &kp F8   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp END   &kp F1  &kp F2             &kp F3   &kp F4   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans  &lt 3 RIGHT_SHIFT  &trans   &trans   &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp TAB    &kp N7        &kp N8        &kp N9  &kp N0                           &kp K_COPY  &kp LEFT   &kp UP    &kp RIGHT  &kp K_PASTE
&trans     &kp N4        &kp N5        &kp N6  &kp SEMI   &trans      &trans    &kp GRAVE   &mkp MB1   &kp DOWN  &mkp MB2   &mkp MB3
&trans     &kp N1        &kp N2        &kp N3  &kp MINUS  &trans      &trans    &kp APOS    &kp EQUAL  &kp LBKT  &kp RBKT   &kp GRAVE
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &trans  &trans     &trans      &mkp MB4  &mkp MB5                                    &kp RSHFT
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &none   &none   &none   &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans             &trans  &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp_exit_AML MB1  &trans  &mkp_exit_AML MB2  &mkp_exit_AML MB3
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans             &trans  &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SYMBOL {
            bindings = <
&trans     &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                      &kp BSLH           &trans    &trans            &trans             &trans
&trans     &kp DOLLAR       &kp PERCENT   &kp CARET             &kp COLON              &trans      &trans  &kp TILDE          &trans    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_SHIFT
&trans     &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp UNDERSCORE         &trans      &trans  &kp DOUBLE_QUOTES  &kp PLUS  &kp LESS_THAN     &kp GREATER_THAN   &kp COLON
&kp LCTRL  &kp LEFT_WIN     &kp LEFT_ALT  &trans                &trans                 &trans      &trans  &trans                                                            &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};
